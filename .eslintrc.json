{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/strict",
        "plugin:@angular-eslint/base",
        "plugin:@angular-eslint/recommended--extra",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:@ngrx/recommended",
        "plugin:regexp/recommended",
        "prettier"
      ],
      "plugins": ["deprecation", "import", "rxjs", "simple-import-sort", "unused-imports"],
      "rules": {
        // ==== deprecation ====
        "deprecation/deprecation": "warn",

        // ==== imports ====
        "import/first": "warn",
        "import/newline-after-import": "warn",
        "import/no-duplicates": "warn",
        "simple-import-sort/imports": "warn",
        "simple-import-sort/exports": "warn",
        "unused-imports/no-unused-imports": "warn",

        // ==== regexp ====
        "regexp/sort-character-class-elements": "warn",

        // ==== rxjs ====
        "rxjs/no-async-subscribe": "warn",
        "rxjs/no-create": "warn",
        "rxjs/no-ignored-replay-buffer": "warn",
        "rxjs/no-ignored-takewhile-value": "warn",
        "rxjs/no-index": "warn",
        "rxjs/no-internal": "warn",
        "rxjs/no-nested-subscribe": "warn",
        "rxjs/no-redundant-notify": "warn",
        "rxjs/no-subject-unsubscribe": "warn",
        "rxjs/no-unbound-methods": "warn",
        "rxjs/no-unsafe-takeuntil": "warn",

        // ==== @ngrx ====
        "@ngrx/on-function-explicit-return-type": "off", // recommended override: avoid ugly code by prettier

        // ==== eslint: possible problems ====
        "no-self-compare": "warn",
        "no-unreachable-loop": "warn",
        "no-unused-private-class-members": "warn",

        // ==== eslint: suggestions ====
        "arrow-body-style": "off", // conflicts with @ngrx/prefer-effect-callback-in-block-statement
        "curly": "warn",
        "default-case-last": "warn",
        "eqeqeq": ["warn", "always", { "null": "ignore" }],
        "func-style": ["warn", "declaration", { "allowArrowFunctions": true }],
        "grouped-accessor-pairs": ["warn", "setBeforeGet"],
        "guard-for-in": "warn",
        "no-bitwise": "warn",
        "no-caller": "warn",
        "no-else-return": "warn",
        "no-eval": "warn",
        "no-extend-native": "warn",
        "no-extra-bind": "warn",
        "no-extra-label": "warn",
        "no-iterator": "warn",
        "no-lone-blocks": "warn",
        "no-lonely-if": "warn",
        "no-new-func": "warn",
        "no-new-object": "warn",
        "no-new-wrappers": "warn",
        "no-octal-escape": "warn",
        "no-proto": "warn",
        "no-script-url": "warn",
        "no-undef-init": "warn",
        "no-unneeded-ternary": "warn",
        "no-useless-computed-key": ["warn", { "enforceForClassMembers": true }],
        "no-useless-concat": "warn",
        "no-useless-rename": "warn",
        "no-useless-return": "warn",
        "operator-assignment": "warn",
        "prefer-arrow-callback": ["warn", { "allowUnboundThis": false }],
        "prefer-exponentiation-operator": "warn",
        "prefer-numeric-literals": "warn",
        "prefer-object-spread": "warn",
        "radix": "warn",
        "spaced-comment": ["warn", "always", { "markers": ["/"], "exceptions": ["*"] }],
        "yoda": ["warn", "never", { "exceptRange": true }],

        // ==== @typescript-eslint: supported rules ====
        "@typescript-eslint/consistent-indexed-object-style": ["warn", "index-signature"],
        "@typescript-eslint/explicit-function-return-type": "warn",
        "@typescript-eslint/explicit-member-accessibility": ["warn", { "accessibility": "no-public" }],
        "@typescript-eslint/method-signature-style": ["warn", "method"],
        "@typescript-eslint/no-empty-interface": "off", // recommended overide: useful with certain libraries
        "@typescript-eslint/no-explicit-any": "off", // recommended override: used frequently
        "@typescript-eslint/no-extraneous-class": "off", // strict override: support annotated empty classes
        "@typescript-eslint/no-non-null-assertion": "off", // recommended override: used frequently
        "@typescript-eslint/no-useless-constructor": "off", // strict overide: needed in annotated angular classes
        "@typescript-eslint/parameter-properties": [
          "warn",
          { "prefer": "parameter-property", "allow": ["readonly", "protected readonly", "private readonly"] }
        ],
        "@typescript-eslint/prefer-nullish-coalescing": "off", // recommended override: sometimes intended
        "@typescript-eslint/prefer-readonly": "warn",

        // ==== @typescript-eslint: extension rules ====
        "no-invalid-this": "off",
        "@typescript-eslint/no-invalid-this": "warn",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "warn",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": ["warn", { "args": "none", "varsIgnorePattern": "^_+$" }], // recommended override: provide special options

        // ==== @angular-eslint: typescript ====
        "@angular-eslint/component-class-suffix": "warn",
        "@angular-eslint/contextual-lifecycle": "warn",
        "@angular-eslint/directive-class-suffix": "warn",
        "@angular-eslint/no-conflicting-lifecycle": "warn",
        "@angular-eslint/no-empty-lifecycle-method": "warn",
        "@angular-eslint/no-output-native": "warn",
        "@angular-eslint/no-output-on-prefix": "warn",
        "@angular-eslint/use-lifecycle-interface": "warn",
        "@angular-eslint/use-pipe-transform-interface": "warn"
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {
        "@angular-eslint/template/accessibility-alt-text": "warn",
        "@angular-eslint/template/accessibility-elements-content": "warn",
        "@angular-eslint/template/accessibility-label-has-associated-control": "warn",
        "@angular-eslint/template/accessibility-table-scope": "warn",
        "@angular-eslint/template/accessibility-valid-aria": "warn",
        "@angular-eslint/template/click-events-have-key-events": "warn",
        "@angular-eslint/template/eqeqeq": ["warn", { "allowNullOrUndefined": true }],
        "@angular-eslint/template/mouse-events-have-key-events": "warn",
        "@angular-eslint/template/no-any": "warn",
        "@angular-eslint/template/no-autofocus": "warn",
        "@angular-eslint/template/no-distracting-elements": "warn",
        "@angular-eslint/template/no-duplicate-attributes": "warn",
        "@angular-eslint/template/no-positive-tabindex": "warn"
      }
    }
  ]
}
