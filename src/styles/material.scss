// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;

@use 'material/button';
@use 'material/dialog';
@use 'material/divider';
@use 'material/fab';
@use 'material/form-field';
@use 'material/icon';
@use 'material/icon-button';
@use 'material/progress-spinner';
@use 'material/sidenav';
@use 'material/snack-bar';
@use 'material/tabs';
@use 'material/toolbar';

html {
  --mat-sys-corner-extra-large: 10px !important;
  --mat-sys-corner-extra-large-top: 10px 10px 0 0 !important;
  --mat-sys-corner-extra-small: 2px !important;
  --mat-sys-corner-extra-small-top: 2px 2px 0 0 !important;
  --mat-sys-corner-large: 8px !important;
  --mat-sys-corner-large-end: 0 8px 8px 0 !important;
  --mat-sys-corner-large-start: 8px 0 0 8px !important;
  --mat-sys-corner-large-top: 8px 8px 0 0 !important;
  --mat-sys-corner-medium: 6px !important;
  --mat-sys-corner-small: 4px !important;

  @include mat.theme(
    (
      color: (
        primary: mat.$azure-palette,
        tertiary: mat.$spring-green-palette,
      ),
      typography: Inter,
    )
  );

  @include mat.button-overrides(button.$tokens);
  @include mat.dialog-overrides(dialog.$tokens);
  @include mat.divider-overrides(divider.$tokens);
  @include mat.fab-overrides(fab.$tokens);
  @include mat.form-field-overrides(form-field.$tokens);
  @include mat.icon-overrides(icon.$tokens);
  @include mat.icon-button-overrides(icon-button.$tokens);
  @include mat.progress-spinner-overrides(progress-spinner.$tokens);
  @include mat.sidenav-overrides(sidenav.$tokens);
  @include mat.snack-bar-overrides(snack-bar.$tokens);
  @include mat.tabs-overrides(tabs.$tokens);
  @include mat.toolbar-overrides(toolbar.$tokens);
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Inter, 'Helvetica Neue', sans-serif;
  color-scheme: light dark;
}

.app-primary {
  @include mat.icon-overrides(icon.$primary-tokens);
  @include mat.icon-button-overrides(icon-button.$primary-tokens);
  @include mat.snack-bar-overrides(snack-bar.$primary-tokens);
}

.app-surface {
  @include mat.button-overrides(button.$surface-tokens);
  @include mat.fab-overrides(fab.$surface-tokens);
  @include mat.icon-overrides(icon.$surface-tokens);
  @include mat.icon-button-overrides(icon-button.$surface-tokens);
  @include mat.progress-spinner-overrides(progress-spinner.$surface-tokens);
  @include mat.snack-bar-overrides(snack-bar.$surface-tokens);
}

.app-secondary {
  @include mat.button-overrides(button.$secondary-tokens);
  @include mat.fab-overrides(fab.$secondary-tokens);
  @include mat.icon-overrides(icon.$secondary-tokens);
  @include mat.icon-button-overrides(icon-button.$secondary-tokens);
  @include mat.progress-spinner-overrides(progress-spinner.$secondary-tokens);
  @include mat.snack-bar-overrides(snack-bar.$secondary-tokens);
}

.app-tertiary {
  @include mat.button-overrides(button.$tertiary-tokens);
  @include mat.fab-overrides(fab.$tertiary-tokens);
  @include mat.icon-overrides(icon.$tertiary-tokens);
  @include mat.icon-button-overrides(icon-button.$tertiary-tokens);
  @include mat.progress-spinner-overrides(progress-spinner.$tertiary-tokens);
  @include mat.snack-bar-overrides(snack-bar.$tertiary-tokens);
}

.app-error {
  @include mat.button-overrides(button.$error-tokens);
  @include mat.fab-overrides(fab.$error-tokens);
  @include mat.icon-overrides(icon.$error-tokens);
  @include mat.icon-button-overrides(icon-button.$error-tokens);
  @include mat.progress-spinner-overrides(progress-spinner.$error-tokens);
  @include mat.snack-bar-overrides(snack-bar.$error-tokens);
}

// MATERIAL VARIABLES AS CLASSES

// TEXT COLOR

.text-primary {
  color: var(--mat-sys-primary);
}

.text-secondary {
  color: var(--mat-sys-secondary);
}

.text-tertiary {
  color: var(--mat-sys-tertiary);
}

.text-surface {
  color: var(--mat-sys-surface);
}

.text-error {
  color: var(--mat-sys-error);
}

.text-on-primary {
  color: var(--mat-sys-on-primary);
}

.text-on-secondary {
  color: var(--mat-sys-on-secondary);
}

.text-on-tertiary {
  color: var(--mat-sys-on-tertiary);
}

.text-on-surface {
  color: var(--mat-sys-on-surface);
}

.text-on-error {
  color: var(--mat-sys-on-error);
}

.text-on-primary-container {
  color: var(--mat-sys-on-primary-container);
}

.text-on-secondary-container {
  color: var(--mat-sys-on-secondary-container);
}

.text-on-tertiary-container {
  color: var(--mat-sys-on-tertiary-container);
}

.text-on-error-container {
  color: var(--mat-sys-on-error-container);
}

.text-on-primary-fixed {
  color: var(--mat-sys-on-primary-fixed);
}

.text-on-secondary-fixed {
  color: var(--mat-sys-on-secondary-fixed);
}

.text-on-tertiary-fixed {
  color: var(--mat-sys-on-tertiary-fixed);
}

// BACKGROUND COLOR

.bg-primary {
  background-color: var(--mat-sys-primary);
}

.bg-secondary {
  background-color: var(--mat-sys-secondary);
}

.bg-tertiary {
  background-color: var(--mat-sys-tertiary);
}

.bg-surface {
  background-color: var(--mat-sys-surface);
}

.bg-error {
  background-color: var(--mat-sys-error);
}

.bg-primary-container {
  background-color: var(--mat-sys-primary-container);
}

.bg-secondary-container {
  background-color: var(--mat-sys-secondary-container);
}

.bg-tertiary-container {
  background-color: var(--mat-sys-tertiary-container);
}

.bg-error-container {
  background-color: var(--mat-sys-error-container);
}

.bg-primary-fixed {
  background-color: var(--mat-sys-primary-fixed);
}

.bg-primary-fixed-dim {
  background-color: var(--mat-sys-primary-fixed-dim);
}

.bg-secondary-fixed {
  background-color: var(--mat-sys-secondary-fixed);
}

.bg-secondary-fixed-dim {
  background-color: var(--mat-sys-secondary-fixed-dim);
}

.bg-tertiary-fixed {
  background-color: var(--mat-sys-tertiary-fixed);
}

.bg-tertiary-fixed-dim {
  background-color: var(--mat-sys-tertiary-fixed-dim);
}

.bg-surface-dim {
  background-color: var(--mat-sys-surface-dim);
}

.bg-surface-bright {
  background-color: var(--mat-sys-surface-bright);
}

.bg-surface-container-lowest {
  background-color: var(--mat-sys-surface-container-lowest);
}

.bg-surface-container-low {
  background-color: var(--mat-sys-surface-container-low);
}

.bg-surface-container {
  background-color: var(--mat-sys-surface-container);
}

.bg-surface-container-high {
  background-color: var(--mat-sys-surface-container-high);
}

.bg-surface-container-highest {
  background-color: var(--mat-sys-surface-container-highest);
}

// ELEVATION

.mat-level0 {
  box-shadow: var(--mat-sys-level0);
}

.mat-level1 {
  box-shadow: var(--mat-sys-level1);
}

.mat-level2 {
  box-shadow: var(--mat-sys-level2);
}

.mat-level3 {
  box-shadow: var(--mat-sys-level3);
}

.mat-level4 {
  box-shadow: var(--mat-sys-level4);
}

.mat-level5 {
  box-shadow: var(--mat-sys-level5);
}

// TYPOGRAPHY

.mat-display-small {
  font: var(--mat-sys-display-small);
}

.mat-display-medium {
  font: var(--mat-sys-display-medium);
}

.mat-display-large {
  font: var(--mat-sys-display-large);
}

.mat-headline-small {
  font: var(--mat-sys-headline-small);
}

.mat-headline-medium {
  font: var(--mat-sys-headline-medium);
}

.mat-headline-large {
  font: var(--mat-sys-headline-large);
}

.mat-title-small {
  font: var(--mat-sys-title-small);
}

.mat-title-medium {
  font: var(--mat-sys-title-medium);
}

.mat-title-large {
  font: var(--mat-sys-title-large);
}

.mat-body-small {
  font: var(--mat-sys-body-small);
}

.mat-body-medium {
  font: var(--mat-sys-body-medium);
}

.mat-body-large {
  font: var(--mat-sys-body-large);
}

.mat-label-small {
  font: var(--mat-sys-label-small);
}

.mat-label-medium {
  font: var(--mat-sys-label-medium);
}

.mat-label-large {
  font: var(--mat-sys-label-large);
}
